{"ast":null,"code":"var _jsxFileName = \"/Users/jguerreiro/Documents/JorgeDev/SintraWelcomeCentre/sintrawelcomecenntre/client/src/components/NavBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { NavBarData } from \"../utility/text/NavBarData\";\nimport { HashLink } from 'react-router-hash-link';\nimport styled from \"styled-components\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = styled.select`\n    width: 50px;\n    height: 10px;\n`;\nconst HeroNav = styled.nav`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    justify-content: center;\n    padding-top: 13px;\n    padding-bottom: 13px;\n    display: flex;\n    align-items: baseline;\n    z-index: 100;\n\n    @media (max-width: 767px) {\n        flex-direction: column;\n        align-items: center;\n        background-color: #333 !important;\n        padding-bottom: 50px;\n        height: 100vh;\n        transition: 0.3s ease-out;\n        transform: translateX(-100vw);\n        ul{\n            flex-direction: column;\n            padding-left: 10px;\n\n            li{\n                margin-top: 30px;\n                margin-left: 27px;\n            }\n        }\n    }\n`;\n_c = HeroNav;\nconst options = [{\n  value: '2',\n  label: 'Language'\n}, {\n  value: 'pt',\n  label: 'Portuguese'\n}, {\n  value: 'en',\n  label: 'English'\n}];\nconst NavBar = props => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const handleChangeLang = lang => {\n    props.changeLang(lang);\n  };\n  const [selectedOption, setSelectedOption] = useState(options[0]);\n  useEffect(() => {\n    const menuBtn = document.getElementById(\"menuButton\");\n    if (!menuBtn) return console.error(\"No menu button found\");\n    const toggleButtonStyle = () => menuOpen ? setMenuOpen(false) : setMenuOpen(true);\n    menuBtn && menuBtn.addEventListener('click', toggleButtonStyle);\n    const changeNavBgColor = () => {\n      const wH = window.innerHeight;\n      const nav = document.getElementById('nav');\n      const currentH = document.documentElement.scrollTop;\n      if (!nav) return;\n      if (currentH >= wH) {\n        nav.style.backgroundColor = \"#333\";\n      } else {\n        nav.style.backgroundColor = 'transparent';\n      }\n    };\n    if (window.innerWidth <= 767) {\n      const nav = document.getElementById(\"nav\");\n      if (!nav) return console.error(\"No menu found\");\n      nav && menuOpen ? nav.style.transform = 'translateX(0vw)' : nav.style.transform = 'translateX(-100vw)';\n      menuOpen ? menuBtn.classList.add('open') : menuBtn.classList.remove('open');\n    } else {\n      window.addEventListener(\"scroll\", changeNavBgColor);\n    }\n    return () => {\n      window.removeEventListener('scroll', changeNavBgColor);\n      menuBtn.removeEventListener('click', toggleButtonStyle);\n    };\n  }, [menuOpen]);\n  const handleChange = newValue => {\n    console.log(newValue);\n    setSelectedOption(newValue);\n    handleChangeLang(selectedOption && (selectedOption.value === 'en' || selectedOption.value === 'pt') ? selectedOption.value : 'en');\n  };\n  return /*#__PURE__*/_jsxDEV(HeroNav, {\n    className: \"hero_nav\",\n    id: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"hero_nav_ul\",\n      children: NavBarData.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(HashLink, {\n            to: item.path,\n            smooth: true,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setMenuOpen(false),\n              children: item[props.language].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero_nav_dropdown_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        value: selectedOption,\n        defaultValue: selectedOption,\n        onChange: handleChange,\n        getOptionLabel: lbl => lbl.label,\n        getOptionValue: lbl => lbl.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"5sjv93JjRc2JrIfNBudQ4DzIQyo=\");\n_c2 = NavBar;\nexport default NavBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeroNav\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"names":["React","useEffect","useState","NavBarData","HashLink","styled","Select","jsxDEV","_jsxDEV","Dropdown","select","HeroNav","nav","_c","options","value","label","NavBar","props","_s","menuOpen","setMenuOpen","handleChangeLang","lang","changeLang","selectedOption","setSelectedOption","menuBtn","document","getElementById","console","error","toggleButtonStyle","addEventListener","changeNavBgColor","wH","window","innerHeight","currentH","documentElement","scrollTop","style","backgroundColor","innerWidth","transform","classList","add","remove","removeEventListener","handleChange","newValue","log","className","id","children","map","item","i","to","path","smooth","onClick","language","title","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","getOptionLabel","lbl","getOptionValue","_c2","$RefreshReg$"],"sources":["/Users/jguerreiro/Documents/JorgeDev/SintraWelcomeCentre/sintrawelcomecenntre/client/src/components/NavBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { NavBarData } from \"../utility/text/NavBarData\";\nimport {HashLink} from 'react-router-hash-link';\nimport styled from \"styled-components\";\nimport { Language } from \"../utility/types/types\";\nimport Select, { OptionProps, MultiValue, SingleValue, ActionMeta } from 'react-select';\nimport { valuesText } from \"../utility/text/valuesText\";\n\nconst Dropdown = styled.select`\n    width: 50px;\n    height: 10px;\n`\n\nconst HeroNav = styled.nav`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    justify-content: center;\n    padding-top: 13px;\n    padding-bottom: 13px;\n    display: flex;\n    align-items: baseline;\n    z-index: 100;\n\n    @media (max-width: 767px) {\n        flex-direction: column;\n        align-items: center;\n        background-color: #333 !important;\n        padding-bottom: 50px;\n        height: 100vh;\n        transition: 0.3s ease-out;\n        transform: translateX(-100vw);\n        ul{\n            flex-direction: column;\n            padding-left: 10px;\n\n            li{\n                margin-top: 30px;\n                margin-left: 27px;\n            }\n        }\n    }\n`\n\nconst options = [\n    { value: '2', label: 'Language' },\n    { value: 'pt', label: 'Portuguese'},\n    { value: 'en', label: 'English' },\n];\n\n\ntype NavBarProps = { \n    language: Language\n    changeLang: (lang: Language) => void\n}\n\ntype CustomOptions = {\n    label: string,\n    value: string,\n}\n\nconst NavBar = (props: NavBarProps) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n\n    const handleChangeLang = (lang: Language) => {\n        props.changeLang(lang)\n    }\n\n    const [selectedOption, setSelectedOption] = useState<CustomOptions| null>(options[0]);\n\n    useEffect(() => {\n\n        const menuBtn = document.getElementById(\"menuButton\")\n\n        if(!menuBtn) return console.error(\"No menu button found\")\n\n        const toggleButtonStyle = () => menuOpen ? setMenuOpen(false) : setMenuOpen(true)\n\n        menuBtn && menuBtn.addEventListener('click', toggleButtonStyle)\n\n        const changeNavBgColor = () => {\n            const wH = window.innerHeight;\n            const nav = document.getElementById('nav');\n            const currentH = document.documentElement.scrollTop;\n            if(!nav) return;\n            if(currentH >= wH) {\n                nav.style.backgroundColor = \"#333\";\n            } else {\n                nav.style.backgroundColor = 'transparent'\n            }\n        }\n\n        if(window.innerWidth <= 767) {\n            const nav = document.getElementById(\"nav\");\n            \n             if(!nav) return console.error(\"No menu found\");\n\n            nav && menuOpen ? nav.style.transform = 'translateX(0vw)' : nav.style.transform = 'translateX(-100vw)'\n            menuOpen ? menuBtn.classList.add('open') : menuBtn.classList.remove('open')\n        } else {\n            window.addEventListener(\"scroll\", changeNavBgColor)\n        }\n\n\n        return(() => {\n            window.removeEventListener('scroll', changeNavBgColor);\n            menuBtn.removeEventListener('click', toggleButtonStyle);\n        })\n    }, [menuOpen])\n\n    const handleChange = (\n        newValue: SingleValue<CustomOptions>\n    ) => {\n        console.log(newValue)\n            setSelectedOption(newValue as CustomOptions)\n            handleChangeLang(selectedOption && (selectedOption.value === 'en' || selectedOption.value === 'pt') ? selectedOption.value  : 'en')\n    };\n   \n    return(\n        <HeroNav className=\"hero_nav\" id=\"nav\">\n            <ul className=\"hero_nav_ul\">\n                {NavBarData.map((item, i) => {\n                    return (\n                        <li key={i}>\n                            <HashLink to={item.path} smooth>\n                                <span onClick={() => setMenuOpen(false)}>{item[props.language].title}</span>\n                            </HashLink>\n                        </li>\n                    )\n                })}\n            </ul>\n            <div className=\"hero_nav_dropdown_wrapper\">\n                <Select\n                    options={options} \n                    value={selectedOption}\n                    defaultValue={selectedOption}\n                    onChange={handleChange}\n                    getOptionLabel={(lbl) => lbl.label}\n                    getOptionValue={(lbl) => lbl.value}\n                />\n                {/* <SelectBox\n                    onSelect = {handleChangeLang}\n                /> */}\n            </div>\n        </HeroNav>\n    )\n}\n\nexport default NavBar"],"mappings":"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"},"metadata":{},"sourceType":"module"}