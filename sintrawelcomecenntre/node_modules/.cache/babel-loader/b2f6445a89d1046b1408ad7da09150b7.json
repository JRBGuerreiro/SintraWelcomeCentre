{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport emailjs from \"emailjs-com\";\nimport ReactGa from 'react-ga';\nconst useForm = validate => {\n  _s();\n  const [values, setValues] = useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    textArea: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const [isSubmitted, setSubmitted] = useState({\n    isSubmitted: false\n  });\n  const [isError, setError] = useState({\n    isError: false\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    ReactGa.event({\n      category: 'Form button',\n      action: 'Form button button clicked'\n    });\n    const errors = validate(values);\n    setFormErrors(errors);\n\n    ///only submit if we have no errors\n    if (errors && Object.keys(errors).length === 0 && Object.getPrototypeOf(errors) === Object.prototype) {\n      const templateParameters = {\n        from_name: values.name + \" \" + values.lastName,\n        to_name: \"info@sintrawelcomecentre.com\",\n        message: values.textArea,\n        email: values.email\n      };\n      const name = document.getElementById(\"name\");\n      const lastname = document.getElementById(\"lastname\");\n      const email = document.getElementById(\"email\");\n      const message = document.getElementById(\"message\");\n      emailjs.send(\"default_service\", \"template_1oixrtt\", templateParameters, \"user_nibGXcWm9DhkdSVEaAZHw\").then(result => {\n        console.log(result);\n        setSubmitted({\n          isSubmitted: true\n        });\n        if (name !== null && lastname !== null && email !== null && message !== null) {\n          name.innerText = \"\";\n          lastname.innerText = \"\";\n          email.innerText = \"\";\n          message.innerText = \"\";\n        }\n      }, error => {\n        setError({\n          isError: true\n        });\n      });\n    }\n  };\n  let paragraph = '';\n  if (isSubmitted && paragraph) {\n    paragraph = 'Message has been sent!';\n  } else if (isError && paragraph) {\n    paragraph = 'There has been an error submitting your message. Please try again';\n  }\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    paragraph,\n    formErrors\n  };\n};\n_s(useForm, \"FcRLrma6n/USU+ZhSWSwlLwm1vY=\");\nexport default useForm;","map":{"version":3,"names":["useState","emailjs","ReactGa","useForm","validate","_s","values","setValues","name","lastName","email","textArea","formErrors","setFormErrors","handleChange","event","value","target","isSubmitted","setSubmitted","isError","setError","handleSubmit","preventDefault","category","action","errors","Object","keys","length","getPrototypeOf","prototype","templateParameters","from_name","to_name","message","document","getElementById","lastname","send","then","result","console","log","innerText","error","paragraph"],"sources":["/Users/jguerreiro/Documents/JorgeDev/SintraWelcomeCentre/sintrawelcomecenntre/client/src/hooks/useForm.ts"],"sourcesContent":["import {useState} from 'react'\nimport emailjs from \"emailjs-com\"\nimport validateFormInfo from './validateForm';\nimport ReactGa from 'react-ga'\n\ntype Submission = {\n    isSubmitted: boolean\n}\n\ntype Error = {\n    isError: boolean\n}\n\nexport type FormValues = {\n    name: string;\n    lastName: string;\n    email: string;\n    textArea: string;\n}\n\nconst useForm = (validate: (values: FormValues) => Record<string, string>) => {\n    const [values, setValues] = useState<FormValues>({\n        name: \"\",\n        lastName: \"\",\n        email:\"\",\n        textArea: \"\"\n    })\n\n    const [formErrors, setFormErrors] = useState<Record<string, string>>({})\n\n    const handleChange = (event: any) => {\n        const {name, value} = event.target\n\n        setValues({\n            ...values,\n            [name]:value\n        })\n    }\n\n    const [isSubmitted, setSubmitted] = useState<Submission>({ isSubmitted:  false })\n    const [isError, setError] = useState<Error>({ isError: false })\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault()\n        ReactGa.event({\n            category:'Form button',\n            action: 'Form button button clicked'\n        })\n        const errors = validate(values)\n        setFormErrors(errors)\n        \n        ///only submit if we have no errors\n        if(errors\n            && Object.keys(errors).length === 0\n            && Object.getPrototypeOf(errors) === Object.prototype) {\n                const templateParameters = {\n                    from_name: values.name + \" \" + values.lastName,\n                    to_name: \"info@sintrawelcomecentre.com\",\n                    message: values.textArea,\n                    email: values.email,\n                }\n                \n                const name = document.getElementById(\"name\")\n                const lastname = document.getElementById(\"lastname\")\n                const email = document.getElementById(\"email\")\n                const message = document.getElementById(\"message\")\n\n            emailjs\n            .send(\"default_service\", \"template_1oixrtt\", templateParameters, \"user_nibGXcWm9DhkdSVEaAZHw\")\n            .then((result) => {\n                console.log(result)\n                setSubmitted({isSubmitted:true})\n                if(name !== null && lastname !== null && email !== null && message !== null) {\n                    name.innerText = \"\"\n                    lastname.innerText = \"\"\n                    email.innerText = \"\"\n                    message.innerText = \"\"\n                }\n            }, (error) => {\n                setError({isError:true})\n            })\n        }\n        \n    }\n\n    let paragraph: string = '';\n\n    if(isSubmitted && paragraph) {\n        paragraph = 'Message has been sent!'\n    } else if (isError && paragraph) {\n        paragraph = 'There has been an error submitting your message. Please try again'\n    }\n    \n    return {handleChange, values, handleSubmit, paragraph, formErrors}\n}\n\nexport default useForm"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,OAAO,MAAM,aAAa;AAEjC,OAAOC,OAAO,MAAM,UAAU;AAiB9B,MAAMC,OAAO,GAAIC,QAAwD,IAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAa;IAC7CQ,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAExE,MAAMc,YAAY,GAAIC,KAAU,IAAK;IACjC,MAAM;MAACP,IAAI;MAAEQ;IAAK,CAAC,GAAGD,KAAK,CAACE,MAAM;IAElCV,SAAS,CAAC;MACN,GAAGD,MAAM;MACT,CAACE,IAAI,GAAEQ;IACX,CAAC,CAAC;EACN,CAAC;EAED,MAAM,CAACE,WAAW,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAa;IAAEkB,WAAW,EAAG;EAAM,CAAC,CAAC;EACjF,MAAM,CAACE,OAAO,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAQ;IAAEoB,OAAO,EAAE;EAAM,CAAC,CAAC;EAE/D,MAAME,YAAY,GAAIP,KAAU,IAAK;IACjCA,KAAK,CAACQ,cAAc,CAAC,CAAC;IACtBrB,OAAO,CAACa,KAAK,CAAC;MACVS,QAAQ,EAAC,aAAa;MACtBC,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,MAAM,GAAGtB,QAAQ,CAACE,MAAM,CAAC;IAC/BO,aAAa,CAACa,MAAM,CAAC;;IAErB;IACA,IAAGA,MAAM,IACFC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,MAAM,KAAK,CAAC,IAChCF,MAAM,CAACG,cAAc,CAACJ,MAAM,CAAC,KAAKC,MAAM,CAACI,SAAS,EAAE;MACnD,MAAMC,kBAAkB,GAAG;QACvBC,SAAS,EAAE3B,MAAM,CAACE,IAAI,GAAG,GAAG,GAAGF,MAAM,CAACG,QAAQ;QAC9CyB,OAAO,EAAE,8BAA8B;QACvCC,OAAO,EAAE7B,MAAM,CAACK,QAAQ;QACxBD,KAAK,EAAEJ,MAAM,CAACI;MAClB,CAAC;MAED,MAAMF,IAAI,GAAG4B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;MAC5C,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MACpD,MAAM3B,KAAK,GAAG0B,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;MAC9C,MAAMF,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAEtDpC,OAAO,CACNsC,IAAI,CAAC,iBAAiB,EAAE,kBAAkB,EAAEP,kBAAkB,EAAE,4BAA4B,CAAC,CAC7FQ,IAAI,CAAEC,MAAM,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnBtB,YAAY,CAAC;UAACD,WAAW,EAAC;QAAI,CAAC,CAAC;QAChC,IAAGV,IAAI,KAAK,IAAI,IAAI8B,QAAQ,KAAK,IAAI,IAAI5B,KAAK,KAAK,IAAI,IAAIyB,OAAO,KAAK,IAAI,EAAE;UACzE3B,IAAI,CAACoC,SAAS,GAAG,EAAE;UACnBN,QAAQ,CAACM,SAAS,GAAG,EAAE;UACvBlC,KAAK,CAACkC,SAAS,GAAG,EAAE;UACpBT,OAAO,CAACS,SAAS,GAAG,EAAE;QAC1B;MACJ,CAAC,EAAGC,KAAK,IAAK;QACVxB,QAAQ,CAAC;UAACD,OAAO,EAAC;QAAI,CAAC,CAAC;MAC5B,CAAC,CAAC;IACN;EAEJ,CAAC;EAED,IAAI0B,SAAiB,GAAG,EAAE;EAE1B,IAAG5B,WAAW,IAAI4B,SAAS,EAAE;IACzBA,SAAS,GAAG,wBAAwB;EACxC,CAAC,MAAM,IAAI1B,OAAO,IAAI0B,SAAS,EAAE;IAC7BA,SAAS,GAAG,mEAAmE;EACnF;EAEA,OAAO;IAAChC,YAAY;IAAER,MAAM;IAAEgB,YAAY;IAAEwB,SAAS;IAAElC;EAAU,CAAC;AACtE,CAAC;AAAAP,EAAA,CA1EKF,OAAO;AA4Eb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}