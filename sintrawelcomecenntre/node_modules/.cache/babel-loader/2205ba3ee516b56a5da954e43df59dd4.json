{"ast":null,"code":"var _jsxFileName = \"/Users/jguerreiro/Documents/JorgeDev/SintraWelcomeCentre/sintrawelcomecenntre/client/src/components/NavBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { NavBarData } from \"../utility/text/NavBarData\";\nimport { HashLink } from 'react-router-hash-link';\nimport styled from \"styled-components\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = styled.select`\n    width: 50px;\n    height: 10px;\n`;\nconst HeroNav = styled.nav`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    justify-content: center;\n    padding-top: 13px;\n    padding-bottom: 13px;\n    display: flex;\n    align-items: baseline;\n    z-index: 100;\n\n    @media (max-width: 767px) {\n        flex-direction: column;\n        align-items: center;\n        background-color: #333 !important;\n        padding-bottom: 50px;\n        height: 100vh;\n        transition: 0.3s ease-out;\n        transform: translateX(-100vw);\n        ul{\n            flex-direction: column;\n            padding-left: 10px;\n\n            li{\n                margin-top: 30px;\n                margin-left: 27px;\n            }\n        }\n    }\n`;\n_c = HeroNav;\nconst options = [{\n  value: '2',\n  label: 'Option 1',\n  image: \"./images/Flags/world.png\"\n}, {\n  value: 'pt',\n  label: 'Option 2',\n  image: \"./images/Flags/portugal-flag-small.png\"\n}, {\n  value: 'en',\n  label: 'Option 3',\n  image: \"./images/Flags/united-kingdom.png\"\n}];\nconst NavBar = props => {\n  _s();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const handleChangeLang = lang => {\n    props.changeLang(lang);\n  };\n  const [selectedOption, setSelectedOption] = useState(null);\n  useEffect(() => {\n    const menuBtn = document.getElementById(\"menuButton\");\n    if (!menuBtn) return console.error(\"No menu button found\");\n    const toggleButtonStyle = () => menuOpen ? setMenuOpen(false) : setMenuOpen(true);\n    menuBtn && menuBtn.addEventListener('click', toggleButtonStyle);\n    const changeNavBgColor = () => {\n      const wH = window.innerHeight;\n      const nav = document.getElementById('nav');\n      const currentH = document.documentElement.scrollTop;\n      if (!nav) return;\n      if (currentH >= wH) {\n        nav.style.backgroundColor = \"#333\";\n      } else {\n        nav.style.backgroundColor = 'transparent';\n      }\n    };\n    if (window.innerWidth <= 767) {\n      const nav = document.getElementById(\"nav\");\n      if (!nav) return console.error(\"No menu found\");\n      nav && menuOpen ? nav.style.transform = 'translateX(0vw)' : nav.style.transform = 'translateX(-100vw)';\n      menuOpen ? menuBtn.classList.add('open') : menuBtn.classList.remove('open');\n    } else {\n      window.addEventListener(\"scroll\", changeNavBgColor);\n    }\n    return () => {\n      window.removeEventListener('scroll', changeNavBgColor);\n      menuBtn.removeEventListener('click', toggleButtonStyle);\n    };\n  }, [menuOpen]);\n  const customOption = _ref => {\n    let {\n      label,\n      data\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.image,\n        alt: label,\n        width: \"20\",\n        height: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this);\n  };\n  const handleOnChange = newValue => {\n    // Handle the selected option\n    console.log('Selected option:', newValue);\n  };\n  const handleChange = (newValue, actionMeta) => {\n    console.log(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(HeroNav, {\n    className: \"hero_nav\",\n    id: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"hero_nav_ul\",\n      children: NavBarData.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(HashLink, {\n            to: item.path,\n            smooth: true,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setMenuOpen(false),\n              children: item[props.language].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero_nav_dropdown_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        defaultValue: selectedOption,\n        onChange: handleChange,\n        getOptionLabel: lbl => lbl.label,\n        getOptionValue: lbl => lbl.value,\n        components: {\n          Option: customOption\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"/K367gafpGQl2ceB1lkPoWWEoos=\");\n_c2 = NavBar;\nexport default NavBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeroNav\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"names":["React","useEffect","useState","NavBarData","HashLink","styled","Select","jsxDEV","_jsxDEV","Dropdown","select","HeroNav","nav","_c","options","value","label","image","NavBar","props","_s","menuOpen","setMenuOpen","handleChangeLang","lang","changeLang","selectedOption","setSelectedOption","menuBtn","document","getElementById","console","error","toggleButtonStyle","addEventListener","changeNavBgColor","wH","window","innerHeight","currentH","documentElement","scrollTop","style","backgroundColor","innerWidth","transform","classList","add","remove","removeEventListener","customOption","_ref","data","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","handleOnChange","newValue","log","handleChange","actionMeta","className","id","map","item","i","to","path","smooth","onClick","language","title","defaultValue","onChange","getOptionLabel","lbl","getOptionValue","components","Option","_c2","$RefreshReg$"],"sources":["/Users/jguerreiro/Documents/JorgeDev/SintraWelcomeCentre/sintrawelcomecenntre/client/src/components/NavBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { NavBarData } from \"../utility/text/NavBarData\";\nimport {HashLink} from 'react-router-hash-link';\nimport styled from \"styled-components\";\nimport { Language } from \"../utility/types/types\";\nimport Select, { OptionProps, MultiValue, SingleValue, ActionMeta } from 'react-select';\nimport { valuesText } from \"../utility/text/valuesText\";\n\nconst Dropdown = styled.select`\n    width: 50px;\n    height: 10px;\n`\n\nconst HeroNav = styled.nav`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    justify-content: center;\n    padding-top: 13px;\n    padding-bottom: 13px;\n    display: flex;\n    align-items: baseline;\n    z-index: 100;\n\n    @media (max-width: 767px) {\n        flex-direction: column;\n        align-items: center;\n        background-color: #333 !important;\n        padding-bottom: 50px;\n        height: 100vh;\n        transition: 0.3s ease-out;\n        transform: translateX(-100vw);\n        ul{\n            flex-direction: column;\n            padding-left: 10px;\n\n            li{\n                margin-top: 30px;\n                margin-left: 27px;\n            }\n        }\n    }\n`\n\nconst options = [\n    { value: '2', label: 'Option 1', image: \"./images/Flags/world.png\" },\n    { value: 'pt', label: 'Option 2', image: \"./images/Flags/portugal-flag-small.png\" },\n    { value: 'en', label: 'Option 3', image:\"./images/Flags/united-kingdom.png\" },\n];\n\n\ntype NavBarProps = { \n    language: Language\n    changeLang: (lang: Language) => void\n }\n\nconst NavBar = (props: NavBarProps) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n\n    const handleChangeLang = (lang: Language) => {\n        props.changeLang(lang)\n    }\n\n    const [selectedOption, setSelectedOption] = useState<{ value: string; label: string; image: string } | null>(null);\n\n    useEffect(() => {\n\n        const menuBtn = document.getElementById(\"menuButton\")\n\n        if(!menuBtn) return console.error(\"No menu button found\")\n\n        const toggleButtonStyle = () => menuOpen ? setMenuOpen(false) : setMenuOpen(true)\n\n        menuBtn && menuBtn.addEventListener('click', toggleButtonStyle)\n\n        const changeNavBgColor = () => {\n            const wH = window.innerHeight;\n            const nav = document.getElementById('nav');\n            const currentH = document.documentElement.scrollTop;\n            if(!nav) return;\n            if(currentH >= wH) {\n                nav.style.backgroundColor = \"#333\";\n            } else {\n                nav.style.backgroundColor = 'transparent'\n            }\n        }\n\n        if(window.innerWidth <= 767) {\n            const nav = document.getElementById(\"nav\");\n            \n             if(!nav) return console.error(\"No menu found\");\n\n            nav && menuOpen ? nav.style.transform = 'translateX(0vw)' : nav.style.transform = 'translateX(-100vw)'\n            menuOpen ? menuBtn.classList.add('open') : menuBtn.classList.remove('open')\n        } else {\n            window.addEventListener(\"scroll\", changeNavBgColor)\n        }\n\n\n        return(() => {\n            window.removeEventListener('scroll', changeNavBgColor);\n            menuBtn.removeEventListener('click', toggleButtonStyle);\n        })\n    }, [menuOpen])\n\n    type CustomOptions = {\n        label: string,\n        value: string,\n        image: string\n    }\n\n    const customOption: React.FC<OptionProps<CustomOptions>> = ({ label, data }) => (\n        <div>\n          <img src={data.image} alt={label} width=\"20\" height=\"20\" />\n          {label}\n        </div>\n    );\n\n    const handleOnChange = (newValue: CustomOptions | null) => {\n        // Handle the selected option\n        console.log('Selected option:', newValue)\n      };\n\n      const handleChange = (\n        newValue: MultiValue<{ value: string; label: string; image: string; }> | SingleValue<{ value: string; label: string; image: string; }>,\n        actionMeta: ActionMeta<{ value: string; label: string; image: string; }>\n      ) => {\n            console.log(newValue)\n      };\n   \n\n    return(\n        <HeroNav className=\"hero_nav\" id=\"nav\">\n            <ul className=\"hero_nav_ul\">\n                {NavBarData.map((item, i) => {\n                    return (\n                        <li key={i}>\n                            <HashLink to={item.path} smooth>\n                                <span onClick={() => setMenuOpen(false)}>{item[props.language].title}</span>\n                            </HashLink>\n                        </li>\n                    )\n                })}\n            </ul>\n            <div className=\"hero_nav_dropdown_wrapper\">\n                <Select\n                    options={options} \n                    defaultValue={selectedOption}\n                    onChange={handleChange}\n                    getOptionLabel={(lbl) => lbl.label}\n                    getOptionValue={(lbl) => lbl.value}\n                    components={{\n                        Option: customOption\n                    }}\n                />\n                {/* <SelectBox\n                    onSelect = {handleChangeLang}\n                /> */}\n            </div>\n        </HeroNav>\n    )\n}\n\nexport default NavBar"],"mappings":"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"},"metadata":{},"sourceType":"module"}